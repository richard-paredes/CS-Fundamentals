from enum import Enum
# Feedback: only one blank line here please


class CellState(Enum):
  UNEXPOSED = 0
  EXPOSED = 1
  SEALED = 2


class GameStatus(Enum):
  INPROGRESS = 0
  LOST = 1
  WON = 2
# Feedback: only one blank line here please


class Minesweeper:
  SIZE = 10

  def __init__(self):
    self.cell_states = [
        [CellState.UNEXPOSED for i in range(self.SIZE)] for i in range(self.SIZE)]
    self.mined_cells = [
        [False for i in range(self.SIZE)] for i in range(self.SIZE)]
    self.game_status = GameStatus.INPROGRESS

  def get_cell_status(self, x: int, y: int):
    return self.cell_states[x][y]

  def expose_cell(self, x: int, y: int):
    if self.get_cell_status(x, y) == CellState.UNEXPOSED:
      # Feedback: a blank line after this line, please
      self.cell_states[x][y] = CellState.EXPOSED
      if self.adjacent_mines_count_at(x, y) == 0:
        self.expose_neighbors(x, y)

  def toggle_seal(self, x: int, y: int):
    self.cell_states[x][y] = {
        CellState.UNEXPOSED: CellState.SEALED,
        CellState.SEALED: CellState.UNEXPOSED,
        CellState.EXPOSED: CellState.EXPOSED
    }[self.get_cell_status(x, y)]

  def expose_neighbors(self, x: int, y: int):
    start_x = max(0, x - 1)
    end_x = min(self.SIZE, x + 2)

    start_y = max(0, y - 1)
    end_y = min(self.SIZE, y + 2)

    for i in range(start_x, end_x):
      for j in range(start_y, end_y):
        self.expose_cell(i, j)

  def is_mine_at(self, x: int, y: int):
    # Feedback: let's change this functionh to one line.  return .... no if...
    if any(val not in range(0, self.SIZE) for val in [x, y]) or (not self.mined_cells[x][y]):
      return False
    else:
      return True

  def adjacent_mines_count_at(self, x: int, y: int):
    start_x = max(0, x - 1)
    end_x = min(self.SIZE, x + 2)

    start_y = max(0, y - 1)
    end_y = min(self.SIZE, y + 2)

    mine_count = 0
    for i in range(start_x, end_x):
      for j in range(start_y, end_y):
        mine_count += (i != x or j != y) and self.is_mine_at(i, j)
    return mine_count

  def get_game_status(self):
    return self.game_status
