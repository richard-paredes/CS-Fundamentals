[Reviewed 04/06/21 09:52 AM MDT]
synopsis~: let's avoid a global variable

details: 

Please see suggestions in code.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 04/06/21 07:08 AM MDT]
synopsis~: let's exploit the language capabilities directly

details: 

Let's exploit the language capabilities directly.

We can do this in two steps, as it can get overwhelming to solve the problem in one step.

First, let us keep the cache as a global variable within the memoized solution file. We will eventually find a way to deal with this global variable. 

Second, we will find a way to reuse one recursive function from within the memoized solution. For this, let us take a look at the example in the sample directory.

------------------------------------------------------------------------------
[Reviewed 04/05/21 19:29 PM MDT]
synopsis: let's device a localized approach

details: 

Please see suggestions in code.

------------------------------------------------------------------------------
[Reviewed 04/05/21 18:36 PM MDT]
synopsis~:  previous feedback notes still in files

details: 

Feedback from previous review are still in the files. Please address, remove those feedback notes from the files. After that, please update the reviews request file for a quick review.

------------------------------------------------------------------------------
[Reviewed 04/05/21 15:54 PM MDT]
synopsis: let's move a few things around. Also, let's check memoized is significantly faster

details: 

Please make sure to address and remove Feedback notes from files.

Please see suggestions in code.

------------------------------------------------------------------------------
[Reviewed 04/05/21 14:51 PM MDT]
synopsis: let's reuse instead of repeat

details: 

Please see suggestions in code.

Let's remove the Time class, too much code for a simple operation of measuring time for two operations.

------------------------------------------------------------------------------
[Reviewed 04/05/21 05:43 AM MDT]
synopsis~: red or yellow in coverage, let's try this again

details:
Please make sure to run coverage and make sure there is no red or yellow in the coverage report. If there is red or yellow please fix it or ask for help to fix it. Once the coverage report shows 100%, we can move forward with the reviews.

------------------------------------------------------------------------------
[Reviewed 04/04/21 17:24 PM MDT]
synopsis: good so far, but...

details: 

Good so far, but there is a catch. We'll find out what that is later.

Let's move on to the next step.

------------------------------------------------------------------------------
[Reviewed 04/03/21 19:18 PM MDT]
synopsis~: let's reuse instead of repeat

details: 

Please see suggestions in code.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 04/03/21 12:36 PM MDT]
synopsis: good so far

details: 

Good so far.

Let's move forward to the next function.

------------------------------------------------------------------------------
[Reviewed 04/02/21 18:39 PM MDT]
synopsis: good so far

details: 

Good so far. Please see suggestions in code.

Let's move forward to the next function.

------------------------------------------------------------------------------
[Reviewed 04/01/21 20:01 PM MDT]
synopsis: we can reduce further

details: 

Please see suggestions in code.

After that, let's move forward to the next function.

------------------------------------------------------------------------------
[Reviewed 04/01/21 08:36 AM MDT]
synopsis~: let's reduce duplication, a lot

details: 

Please see suggestions in code.

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
[Reviewed 03/31/21 03:45 AM MDT]
synopsis: let's keep it DRY

details: 

Let's remove the duplication.

The tests in the two test files are the same as they should be. But,
that is also duplication of the tests. Let's remove the duplication and reuse the tests for the two functions, but without violating the single responsibility principle.

------------------------------------------------------------------------------
[Reviewed 03/27/21 17:02 PM MDT]
synopsis: good so far

details: 

Good so far. Please see suggestions in code.

Let's take the next step.

------------------------------------------------------------------------------
[Reviewed 03/27/21 11:48 AM MDT]
synopsis~: good start

details: 

Good start.

Let's create FibonacciImperativeTest and a file fibonacci_imperative with a function fibonacci.

Let's make sure these tests are covered:
-fibonacci for position 0
-fibonacci for position 1
-fibonacci for position 2
-fibonacci for position 3
-fibonacci for position 5
-fibonacci for position 10
-fibonacci for position -1

Let's do a quick review after these changes. Please modify the requestReview.txt file and check it in as soon as you are ready and I will do a review well before the next scheduled review cycle.

------------------------------------------------------------------------------
