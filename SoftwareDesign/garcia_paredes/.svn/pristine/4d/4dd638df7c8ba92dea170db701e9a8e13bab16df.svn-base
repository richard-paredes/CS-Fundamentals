from fibonacci_functional import fibonacci as functional
from fibonacci_base_tests import FibonacciBaseTests

class FibonacciFunctionalTests(FibonacciBaseTests):
  
  def test_canary(self):
    self.assertTrue(True)
  
  def test_fibonacci_for_position_0_returns_1(self, func=functional, pos=0, val=1):
    self.fibonacci_for_position_pos_returns_val(func, pos, val)
  
  def test_fibonacci_for_position_1_returns_1(self, func=functional, pos=1, val=1):
    self.fibonacci_for_position_pos_returns_val(func, pos, val)

  def test_fibonacci_for_position_2_returns_2(self, func=functional, pos=2, val=2):
    self.fibonacci_for_position_pos_returns_val(func, pos, val)

  def test_fibonacci_for_position_3_returns_3(self, func=functional, pos=3, val=3):
    self.fibonacci_for_position_pos_returns_val(func, pos, val)
  
  def test_fibonacci_for_position_5_returns_8(self, func=functional, pos=5, val=8):
    self.fibonacci_for_position_pos_returns_val(func, pos, val)
  
  def test_fibonacci_for_position_10_returns_89(self, func=functional, pos=10, val=89):
    self.fibonacci_for_position_pos_returns_val(func, pos, val)

  def test_fibonacci_for_position_negative_1_raises_exception(self, func=functional):
    self.fibonacci_for_position_negative_1_raises_exception(func)
  